name: Shared GitHub Enterprise Cloud Import

on:
  workflow_call:
    inputs:
      user-mappings-path:
        required: true
        type: string
      user-mappings-source-url:
        required: true
        type: string
    secrets:
      GHEC_ADMIN_TOKEN:
        required: true
      GHES_ADMIN_TOKEN:
        required: true
      GEI_AZURE_CONNECTION_STRING:
        required: true

jobs:
  migrate:
    name: GEI Migrate
    runs-on: ubuntu-latest

    # Raise the timeout to 1,140 minutes (1 day) from the default
    # limit of 360 minutes (6 hours), as migrations can take some tme.
    timeout-minutes: 1140

    steps:
      - name: Install common dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes git unzip curl wget apt-transport-https software-properties-common

      - name: Install GitHub CLI
        run: |
          if [ -z "$(command -v gh)" ]
          then
            wget https://github.com/cli/cli/releases/download/v2.21.2/gh_2.21.2_linux_amd64.deb
            sudo dpkg --install gh_2.21.2_linux_amd64.deb
          fi

      - if: runner.debug
        name: gh version number
        run: gh --version

      - name: Install GitHub Enterprise Importer
        run: |
          if ! fgrep gei <(gh extension list)
          then
            gh extension install https://github.com/github/gh-gei
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - if: runner.debug
        name: GEI version number
        run: gh gei --version

      - name: Install PowerShell
        run: |
          if [ -z "$(command -v pwsh)" ]
          then
            wget "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
            sudo dpkg --install packages-microsoft-prod.deb
            sudo apt-get update
            sudo apt-get install --yes powershell
          fi

      - if: runner.debug
        name: PowerShell version number
        run: pwsh --version

      - name: Set migration type
        uses: actions/github-script@v5
        id: migration-type
        with:
          result-encoding: string
          script: return context.payload.comment.body.match('dry-run') ? 'Dry-run' : 'Production'

      - name: Parse issue body
        id: parse-issue-body
        uses: actions/github-script@v5
        with:
          script: require('./.github/scripts/parse-issue-body.js')({context, core})

      - name: Migrate repositories
        shell: pwsh
        run: |
          function Exec {
            param (
              [scriptblock]$ScriptBlock
            )
            & @ScriptBlock
            if ($lastexitcode -ne 0) {
              exit $lastexitcode
            }
          }

          function ExecAndGetMigrationID {
            param (
              [scriptblock]$ScriptBlock
            )
            $MigrationID = Exec $ScriptBlock | ForEach-Object {
              Write-Host $_
              $_
            } | Select-String -Pattern "\(ID: (.+)\)" | ForEach-Object { $_.matches.groups[1] }
            return $MigrationID
          }

          $RepoMigrations = [ordered]@{}
          $RepoSources = ConvertFrom-Json '${{ steps.parse-issue-body.outputs.repositories }}'

          foreach ($Repo in $RepoSources) {
            $MigrationID = ExecAndGetMigrationID {
              gh gei migrate-repo                                                             `
              --source-repo $Repo.name                                                        `
              --target-repo $Repo.name                                                        `
              --github-source-org $Repo.org                                                   `
              --github-target-org '${{ steps.parse-issue-body.outputs.target-organization }}' `
              --azure-storage-connection-string '${{ secrets.GEI_AZURE_CONNECTION_STRING }}'  `
              --ghes-api-url "https://$($Repo.host)/api/v3"                                   `
              --lock-source-repo
            }
            $RepoMigrations[$repo.name] = $MigrationID
          }

          foreach ($RepoName in $RepoMigrations.Keys) {
            gh gei wait-for-migration --migration-id $RepoMigrations[$RepoName]
          }
        env:
          GH_PAT: ${{ secrets.GHEC_ADMIN_TOKEN }}
          GH_SOURCE_PAT: ${{ secrets.GHES_ADMIN_TOKEN }}

      - name: Check out repository for file "user-mappings.csv"
        uses: actions/checkout@v3

      - name: Reclaim mannequins
        run: >
          gh gei reclaim-mannequin
          --csv ${{ inputs.user-mappings-path }}
          --github-target-org ${{ steps.parse-issue-body.outputs.target-organization }}
          --github-target-pat ${{ secrets.GHEC_ADMIN_TOKEN }}

      - if: failure()
        name: Report failed migration
        uses: actions/github-script@v5
        with:
          script: |
            const body = `:no_entry: **${{ steps.migration-type.outputs.result }} migration failed.** [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

      - name: Add delete repositories comment
        uses: actions/github-script@v5
        with:
          script: |
            const migrationType = '${{ steps.migration-type.outputs.result }}'

            if (migrationType === 'Dry-run') {
              let body = `In order to delete the migrated repositories of the dry-run, add a comment with the following slash command:

              \`\`\`
              /delete-repositories ${{ steps.import.outputs.migration-guid }}
              \`\`\`
              `

              // remove leading whitespace
              body = body.replace(/  +/g, '')

              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body
              })
            }

